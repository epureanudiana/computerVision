function [stitched_image] = stitch(left, right)
[hl, wl, ~] = size(left);
[hr, wr, ~] = size(right);

[fa, fb, matches, ~] = keypoint_matching(rgb2gray(left), rgb2gray(right));
[x, ~] = RANSAC(fa, fb, matches, 5);

M = [x(1), x(2); x(3), x(4)];
T = [x(5); x(6)];  

% transform the corners of the right image 
corners = [M * [1; 1] + T, M * [wr; 1] + T, M * [1; hr] + T, M * [wr; hr] + T]';
corners

% get the edges of the stitched image
top_edge = max(ceil(max(corners(:, 2))), hl);
bottom_edge = min(floor(min(corners(:, 2))), 1);
left_edge = min(floor(min(corners(:, 1))), 1);
right_edge = max(ceil(max(corners(:, 1))), wl);

% estimate the size 
hs = top_edge - bottom_edge + 1;
ws = right_edge - left_edge + 1;

%% MODIFY
%transform I2
tform_m = [M, T; 0, 0, 1]';
%warped = my_imwarp(I2_original, tform_m);
tform = affine2d(tform_m);
warped = imwarp(right, tform);
[hw, lw, ~] = size(warped);

imwarp_transf = [x(1), x(2), 0;
      x_best(3), x(4), 0;
      x_best(5), x(6), 1];
imwarp_transf_inv = inv(imwarp_transf);
imwarp_transf_inv(1, 3) = 0;
imwarp_transf_inv(2, 3) = 0;
imwarp_transf_inv(3, 3) = 1;
%%
% stitch the images
stitched_image = zeros([hs, ws, 3], 'like', left);
stitched_image(1:hl, 1:wl, :) = left;
end
